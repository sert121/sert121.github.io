{"componentChunkName":"component---src-pages-archive-js","path":"/archive/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"date":"2022-12-20","title":"Data Imputation Framework","tech":["Python","Tensorflow","Sci-kit Learn"],"github":"","external":"","company":"AbInBev"},"html":"<p>A data-imputation framework that offers different methods of data-imputation along with a comprehensive evaluation of each method on different datasets. Some of the techniques include:-</p>\n<ul>\n<li>MissForest (using Random Forests)</li>\n<li>GAN-based imputations</li>\n<li>KNN-based imputation</li>\n<li>MICE</li>\n</ul>"}},{"node":{"frontmatter":{"date":"2022-07-15","title":"Data Distillation and Knowledege Transfer","tech":["Python","Tensorflow","Sci-kit Learn"],"github":"","external":"","company":null},"html":"<p>Reproduction and research on: “Soft-Label Dataset Distillation and Text Dataset Distillation”, “‘Less Than One-Shot Learning”\nunder the supervision of <a href=\"https://ilia10000.github.io/\">Ilia Sucholusky<a>, Princeton.</p>"}},{"node":{"frontmatter":{"date":"2021-09-01","title":"A Face-Mask Detection System","tech":["Python","OpenCV","Tensorflow"],"github":"","external":"","company":"Ashoka University"},"html":"<p>A face-mask detector that is capable of identifying whether people in a\ngiven image are wearing masks or not. It uses mobile-friendly computer vision models coupled with transfer learning to improve efficiency.\nIt achieves over 85% accuracy in low-light areas.</p>"}},{"node":{"frontmatter":{"date":"2021-03-22","title":"Document Verifier","tech":["Python","Bitcoin SDK"],"github":"https://github.com/sert121/BitNFT","external":"https://drive.google.com/file/d/1vhV0Shkb7fnXWzzC_Df3j8dafDkvdMUS/view","company":""},"html":"<p>An online medium to allow hassle-free certification of files.\nIt allows users to create and validate ownsership of documents using a public ledger (such as Bitcoin).</p>"}},{"node":{"frontmatter":{"date":"2020-11-01","title":"LokDhaba","tech":["React, Plotly","Python","Django, SQL"],"github":"https://github.com/tcpd/lokdhaba","external":"https://lokdhaba.ashoka.edu.in/","company":"Trivedi Centre For Political Data"},"html":"<p>Lokdhaba is a repository of Indian election results - both Vidhan Sabha (state level) and Lok Sabha (national level) - beginning 1962. My contributions can be summarized below:</p>\n<ul>\n<li>Data visualizations - React, Plotly</li>\n<li>API Design - Python</li>\n<li>Development and migration of the Backend stack - Django, SQL</li>\n<li>Deployment - Docker</li>\n</ul>"}},{"node":{"frontmatter":{"date":"2020-07-16","title":"Trivedi Centre Website","tech":["WordPress","PHP","JS","Python"],"github":"","external":"https://tcpd.ashoka.edu.in/","company":"Trivedi Centre for Political Data"},"html":"<p>Built the website for Trivedi Centre for Political Data;\nEased the process of data-migration from the older version via python-xmlrpc APIs.</p>"}},{"node":{"frontmatter":{"date":"2019-09-22","title":"Web Scrapers","tech":["Python","Selenium","Beautiful Soup"],"github":"https://github.com/sert121/web-scrape/tree/master","external":"","company":"Ashoka University"},"html":"<p>Scraping tools to scrape YCombinator, Reddit , Google and Imgur to extract different types of data, and save it in a personalized format (json/csv/xlsx).</p>"}},{"node":{"frontmatter":{"date":"2019-04-03","title":"Detecting Media Biases","tech":["Jekyll","SCSS","JS"],"github":"","external":"","company":"Trivedi Centre for Political Data"},"html":"<p>An end-to-end pipeline that aims at detecting media-biases present in digital news sources. The pipeline can be broken down into three parts:</p>\n<ol>\n<li>Data collection: Data is scraped via automated scrapers which scrape data from various news sources available on the web.</li>\n<li>Preprocessing: Raw data is sanitized by performing different mechanisms such as stop-word removal, stemming, lemmatization, etc.</li>\n<li>Detection: The pipeline uses topic modeling techniques combined with document classifiers to detect biases effectively.</li>\n</ol>"}}]}},"pageContext":{}},"staticQueryHashes":["1481993802","1994492073","3391063840","604461682","859278279"]}